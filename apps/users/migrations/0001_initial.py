# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-04-21 11:30
from __future__ import unicode_literals

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='\u7528\u6237ID')),
                ('nick_name', models.CharField(default='', max_length=20, verbose_name='\u6635\u79f0')),
                ('password', models.CharField(default='', max_length=20, verbose_name='\u5bc6\u7801')),
                ('phone', models.CharField(max_length=11, unique=True, verbose_name='\u624b\u673a\u53f7')),
                ('complete', models.BooleanField(default=False, verbose_name='\u662f\u5426\u5b8c\u5584\u4fe1\u606f\u662f\u5426\u5b8c\u5584')),
                ('user_name', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='\u7528\u6237\u59d3\u540d')),
                ('identity', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='\u8eab\u4efd\u8bc1\u53f7')),
                ('bank', models.CharField(blank=True, choices=[('\u4e2d\u56fd\u5de5\u5546\u94f6\u884c', '\u4e2d\u56fd\u5de5\u5546\u94f6\u884c'), ('\u4e2d\u56fd\u519c\u4e1a\u94f6\u884c', '\u4e2d\u56fd\u519c\u4e1a\u94f6\u884c'), ('\u4e2d\u56fd\u5efa\u8bbe\u94f6\u884c', '\u4e2d\u56fd\u5efa\u8bbe\u94f6\u884c'), ('\u4e2d\u56fd\u94f6\u884c', '\u4e2d\u56fd\u94f6\u884c'), ('\u4e2d\u56fd\u90ae\u653f\u50a8\u84c4\u94f6\u884c', '\u4e2d\u56fd\u90ae\u653f\u50a8\u84c4\u94f6\u884c')], default=('\u4e2d\u56fd\u5de5\u5546\u94f6\u884c', '\u4e2d\u56fd\u5de5\u5546\u94f6\u884c'), max_length=20, null=True, verbose_name='\u5f00\u6237\u884c')),
                ('bank_number', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='\u94f6\u884c\u5361\u53f7')),
                ('gender', models.CharField(blank=True, choices=[('\u7537', '\u7537'), ('\u5973', '\u5973'), ('', '')], default=('\u7537', '\u7537'), max_length=6, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('image', models.ImageField(blank=True, default='users/default.png', null=True, upload_to='image/users/%Y/%m', verbose_name='\u7528\u6237\u5934\u50cf\u56fe\u7247')),
                ('education', models.CharField(blank=True, choices=[('\u521d\u4e2d', '\u521d\u4e2d'), ('\u9ad8\u4e2d', '\u9ad8\u4e2d'), ('\u5927\u5b66\u4e13\u79d1', '\u5927\u5b66\u4e13\u79d1'), ('\u5927\u5b66\u672c\u79d1', '\u5927\u5b66\u672c\u79d1'), ('\u7855\u58eb', '\u7855\u58eb'), ('\u535a\u58eb', '\u535a\u58eb'), ('none', '')], default='none', max_length=20, null=True, verbose_name='\u5b66\u5386')),
                ('qq', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='QQ\u53f7')),
                ('wechat', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='\u5fae\u4fe1\u53f7')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '\u7528\u6237\u4fe1\u606f',
                'verbose_name_plural': '\u7528\u6237\u4fe1\u606f',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='\u9a8c\u8bc1\u7801')),
                ('mobile', models.CharField(max_length=11, verbose_name='\u7535\u8bdd')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u6dfb\u52a0\u65f6\u95f4')),
            ],
            options={
                'verbose_name': '\u77ed\u4fe1\u9a8c\u8bc1\u7801',
                'verbose_name_plural': '\u77ed\u4fe1\u9a8c\u8bc1\u7801',
            },
        ),
    ]
